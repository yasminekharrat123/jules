---
- name: "[MONITORING] create loki system group"
  group:
    name: loki
    system: true
    state: present
  become: true

- name: "[MONITORING] create loki system user"
  user:
    name: loki
    system: true
    shell: /usr/sbin/nologin
    group: loki
    createhome: false
    home: "{{ loki_db_dir }}"
  become: true

- name: "[MONITORING] create loki data directory"
  file:
    path: "{{ loki_db_dir }}"
    state: directory
    owner: loki
    group: loki
    mode: 0755
  become: true

- name: "[MONITORING] create loki config & bin directories"
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: loki
    mode: 0770
  become: true
  loop:
    - "{{ loki_config_dir }}"
    - "{{ loki_path }}"

- name: "[MONITORING] download loki binary"
  get_url:
    url: "https://github.com/grafana/loki/releases/download/v{{ loki_version }}/loki-linux-amd64.zip"
    dest: "/tmp/loki-linux-amd64.zip"
  register: loki_download
  until: loki_download is succeeded
  retries: 5
  delay: 2
  check_mode: false
  become: false

- name: "[MONITORING] unpack loki binary"
  unarchive:
    src: "/tmp/loki-linux-amd64.zip"
    dest: "/tmp"
    remote_src: true
  # when: loki_download.changed
  check_mode: false

- name: "[MONITORING] copy loki config"
  template:
    src: "{{ role_path }}/files/etc/loki/loki.yml.j2"
    dest: "{{ loki_config_dir }}/loki.yml"
    owner: loki
    group: loki
  become: true
  notify:
    - restart loki

- name: "[MONITORING] copy loki binary"
  copy:
    src: "/tmp/loki-linux-amd64"
    dest: "{{ loki_path }}/loki"
    mode: 0755
    owner: root
    group: root
    remote_src: true
  become: true
  notify:
    - restart loki

- name: "[MONITORING] create systemd loki service"
  template:
    src: "{{ role_path }}/files/etc/systemd/system/loki.service.j2"
    dest: /lib/systemd/system/loki.service
    owner: root
    group: root
    mode: 0644
  become: true
  notify:
    - restart loki

- name: "[MONITORING] Ensure Loki FQDN is in /etc/hosts"
  become: true
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "{{ loki_net.ip }} {{ loki_net.host }}"
    state: present
    regexp: ".*{{ loki_net.host }}$"

