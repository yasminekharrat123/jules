---
- name: "[APP] Copy backend env file"
  template:
    src: "{{ app_backend_env_template }}"
    dest: "{{ app_backend_env_file }}"
    mode: "{{ app_env_file_mode }}"

- name: "[APP] Copy frontend env file"
  template:
    src: "{{ app_frontend_env_template }}"
    dest: "{{ app_frontend_env_file }}"
    mode: "{{ app_env_file_mode }}"

- name: "[APP] Run backend container"
  become: true
  community.docker.docker_container:
    name: "{{ app_backend_container_name }}"
    image: "{{ docker_registry }}/{{ docker_registry_user }}/{{ app_name }}-backend:{{ environment }}"
    env_file: "{{ app_backend_env_file }}"
    ports:
      - "{{ api_port }}:{{ api_port }}"
    restart_policy: always
    networks:
      - name: "{{ app_network_name }}"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:{{ api_port }} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

- name: "[APP] Run migration (one-shot)"
  become: true
  community.docker.docker_container:
    name: "{{ app_migrate_container_name }}"
    image: "{{ docker_registry }}/{{ docker_registry_user }}/{{ app_name }}-backend:{{ environment }}"
    env_file: "{{ app_backend_env_file }}"
    command: "{{ app_migrate_command }}"
    restart_policy: "no"
    state: started
    auto_remove: yes
    networks:
      - name: "{{ app_network_name }}"

- name: "[APP] Run frontend container"
  become: true
  community.docker.docker_container:
    name: "{{ app_frontend_container_name }}"
    image: "{{ docker_registry }}/{{ docker_registry_user }}/{{ app_name }}-frontend:{{ environment }}"
    env_file: "{{ app_frontend_env_file }}"
    ports:
      - "{{ frontend_port }}:{{ frontend_port }}"
    restart_policy: always
    networks:
      - name: "{{ app_network_name }}"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:{{ frontend_port }} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
